    # 算术表达式
num1 = 5
num2 = 3
print(num1 + num2)
print(num1 - num2)
print(num1 * num2)
print(num1 / num2)
print(num1 % num2)  # 取余数
print(num1 ** num2)  # 求幂，次方（num1的num2次方）
print(num1 // num2)  # 除取整数部分

'''
赋值运算符和赋值运算表达式
赋值运算符 =
赋值运算表达式
格式：变量 = 表达式
'''
num3 = 10
num4 = num3 + 20

'''
复合运算符
+=  a += b  a = a + b
-=
*=
/=
...
'''

'''
if语句

格式：
if 表达式:
    语句
# if语句前端加入“Tab”或者4个空格

逻辑：
当程序执行到if语句时，首先计算“表达式”的值
如果“表达式”的值为真，那么就执行if下的“语句”
如果“表达式”的值为假，则跳过整个if语句，继续向下执行

何为真假：
假：0/0.0/''/None/False
真：除了“假”的值，都是“真”
'''
num5 = 20
num6 = 20

if num5 == num6:
    num5 = 100

print("num5 =", num5)

'''
if-else语句

格式：
if 表达式:
    语句1
else:
    语句2

逻辑：
当程序执行到if-else语句时，首先计算“表达式”的值
如果“表达式”值为真，则执行“语句1”，执行完“语句1”跳出整个if-else语句，并向下继续执行
如果“表达式”值为假，则执行“语句2”，执行完“语句2”跳出整个if-else语句，并向下继续执行

'''

num = int(input("请输入一个数字："))
if num % 2 == 0:
    print("偶数")
else:
    print("奇数")

'''
练习题
从控制台输入一个三位数，如果是水仙花数就打印“是水仙花数”
否则打印“不是水仙花数”
153 = 1^3 + 5^3 + 3^3

从控制台输入一个五位数，如果是回文数就打印“是回文数”
否则打印“不是回文数”
11111   12321   12221

# 不准使用max min
从控制台输入一个两个数，输出较大的值

从控制台输入一个三个数，输出较大的值
'''

print(5 & 7)  # 按位与运算
print(5 | 7)  # 按位或运算
print(5 ^ 7)  # 按位异或运算
print(~5)  # 按位取反运算

# << 左移动运算符
# 各二进制位全部左移动若干位，由 << 右侧的数字决定，高位丢弃，低位补零
print(2 << 2)
'''
0000010 = 2
0001000 = 8
'''
# >> 右移动运算符
# 各二进制位全部右移动若干位，由 >> 右侧的数字决定，低位丢弃，高位补零
print(13 >> 2)
'''
1101 = 13
0011 = 2
'''

'''
关系运算符和关系运算表达式

关系运算符：
==  !=  >   <   >=  <=
关系表达式：
格式：
表达式1 关系运算符 表达式2
功能：计算“表达式1”和“表达式2”的值
值：真、假
'''

'''
逻辑运算法

逻辑与：and

逻辑与运算表达式：
表达式1 and 表达式2
值：其一为假，即为假
1=真 2=真 真
1=真 2=假 假
1=假 2=真 假
1=假 2=假 假
'''
# 短路原则
# 表达式1 and 表达式2 and 表达式3 and ...... adn 表达式n
# 当有一个“表达式”确认为假后，即后续的表达式不再进行计算
# 当已确认整个表达式结果的时候，将不再继续运算后续表达式

a = -1
# a = 0 为假，其他值为真（1,2,3 或 -1,-2 等）
b = 20
if a and b:
    print("TRUE")
else:
    print("FALSE")

'''
逻辑或：or

逻辑或运算表达式：
表达式1 or 表达式2 or 表达式3 or ... or 表达式n
值：其一为真，即为真
1 = 真 2 = 真 真
1 = 真 2 = 假 真
1 = 假 2 = 真 真
1 = 假 2 = 假 假
'''
a1 = 0
b1 = 1
if a1 or b1:
    print("True")
else:
    print("False")

'''
逻辑非：not

逻辑非运算表达式：not 表达式1
值：取其相反
1 = 真 假
1 = 假 真
'''
if not 1:
    print("True")
else:
    print("False")

'''
成员运算符：
in：如果在指定的序列中找到值返回True，否则返回False
not in：如果在指定的序列中没有找到值返回True，否则返回False
'''

'''
身份运算符：
is：判断两个标识符是不是引用同一个对象
is not：判断两个标识符是不是引用不同的对象
'''

'''
运算符优先级（从高到低）
(expressions...), [expressions...], {key: value...}, {expressions...}  ：表示绑定或元祖、表示列表、表示字典、表示集合
x[index], x[index:index], x(arguments...), x.attribute  ：下标，切片，调用，属性引用
**  ：求幂
+x, -x, ~x  ：正、负、按位取反
*, /, //, %  ：乘、除、整除、取余
+, -  ：加与减
<<, >>  : 移动
&  ：按位与
^  ：按位异或
|  ：按位或
in, not in, is, is not, <, <=, >, >=, !=, ==  ：比较，包含成员资格测试（Membership Tests）和身份测试（Identity Tests）。
not x  ：布尔“非”
and  ：布尔“与”
or  ：布尔“或”
if - else  ：条件表达式
lambda  ：Lambda 表达式
'''
"""
<= < > >=
== !=
= %= += -= //= ...
is  is not
in  not in
not or  and
"""
